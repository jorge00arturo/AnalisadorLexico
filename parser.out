Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    DIVIDE
    MINUS
    NUMBER
    PLUS
    SEMICOLON
    TIMES

Grammar

Rule 0     S' -> program
Rule 1     program -> object_declaration
Rule 2     object_declaration -> RESERVED IDENTIFIER LBRACE method_declaration RBRACE
Rule 3     method_declaration -> RESERVED IDENTIFIER LPAREN args RPAREN COLON IDENTIFIER EQUALS block
Rule 4     args -> IDENTIFIER COLON IDENTIFIER LBRACKET IDENTIFIER RBRACKET
Rule 5     block -> LBRACE statements RBRACE
Rule 6     statements -> statement
Rule 7     statements -> statements statement
Rule 8     statement -> RESERVED LPAREN STRING RPAREN

Terminals, with rules where they appear

COLON                : 3 4
COMMA                : 
DIVIDE               : 
EQUALS               : 3
IDENTIFIER           : 2 3 3 4 4 4
LBRACE               : 2 5
LBRACKET             : 4
LPAREN               : 3 8
MINUS                : 
NUMBER               : 
PLUS                 : 
RBRACE               : 2 5
RBRACKET             : 4
RESERVED             : 2 3 8
RPAREN               : 3 8
SEMICOLON            : 
STRING               : 8
TIMES                : 
error                : 

Nonterminals, with rules where they appear

args                 : 3
block                : 3
method_declaration   : 2
object_declaration   : 1
program              : 0
statement            : 6 7
statements           : 5 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . object_declaration
    (2) object_declaration -> . RESERVED IDENTIFIER LBRACE method_declaration RBRACE

    RESERVED        shift and go to state 3

    program                        shift and go to state 1
    object_declaration             shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> object_declaration .

    $end            reduce using rule 1 (program -> object_declaration .)


state 3

    (2) object_declaration -> RESERVED . IDENTIFIER LBRACE method_declaration RBRACE

    IDENTIFIER      shift and go to state 4


state 4

    (2) object_declaration -> RESERVED IDENTIFIER . LBRACE method_declaration RBRACE

    LBRACE          shift and go to state 5


state 5

    (2) object_declaration -> RESERVED IDENTIFIER LBRACE . method_declaration RBRACE
    (3) method_declaration -> . RESERVED IDENTIFIER LPAREN args RPAREN COLON IDENTIFIER EQUALS block

    RESERVED        shift and go to state 6

    method_declaration             shift and go to state 7

state 6

    (3) method_declaration -> RESERVED . IDENTIFIER LPAREN args RPAREN COLON IDENTIFIER EQUALS block

    IDENTIFIER      shift and go to state 8


state 7

    (2) object_declaration -> RESERVED IDENTIFIER LBRACE method_declaration . RBRACE

    RBRACE          shift and go to state 9


state 8

    (3) method_declaration -> RESERVED IDENTIFIER . LPAREN args RPAREN COLON IDENTIFIER EQUALS block

    LPAREN          shift and go to state 10


state 9

    (2) object_declaration -> RESERVED IDENTIFIER LBRACE method_declaration RBRACE .

    $end            reduce using rule 2 (object_declaration -> RESERVED IDENTIFIER LBRACE method_declaration RBRACE .)


state 10

    (3) method_declaration -> RESERVED IDENTIFIER LPAREN . args RPAREN COLON IDENTIFIER EQUALS block
    (4) args -> . IDENTIFIER COLON IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    IDENTIFIER      shift and go to state 11

    args                           shift and go to state 12

state 11

    (4) args -> IDENTIFIER . COLON IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    COLON           shift and go to state 13


state 12

    (3) method_declaration -> RESERVED IDENTIFIER LPAREN args . RPAREN COLON IDENTIFIER EQUALS block

    RPAREN          shift and go to state 14


state 13

    (4) args -> IDENTIFIER COLON . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    IDENTIFIER      shift and go to state 15


state 14

    (3) method_declaration -> RESERVED IDENTIFIER LPAREN args RPAREN . COLON IDENTIFIER EQUALS block

    COLON           shift and go to state 16


state 15

    (4) args -> IDENTIFIER COLON IDENTIFIER . LBRACKET IDENTIFIER RBRACKET

    LBRACKET        shift and go to state 17


state 16

    (3) method_declaration -> RESERVED IDENTIFIER LPAREN args RPAREN COLON . IDENTIFIER EQUALS block

    IDENTIFIER      shift and go to state 18


state 17

    (4) args -> IDENTIFIER COLON IDENTIFIER LBRACKET . IDENTIFIER RBRACKET

    IDENTIFIER      shift and go to state 19


state 18

    (3) method_declaration -> RESERVED IDENTIFIER LPAREN args RPAREN COLON IDENTIFIER . EQUALS block

    EQUALS          shift and go to state 20


state 19

    (4) args -> IDENTIFIER COLON IDENTIFIER LBRACKET IDENTIFIER . RBRACKET

    RBRACKET        shift and go to state 21


state 20

    (3) method_declaration -> RESERVED IDENTIFIER LPAREN args RPAREN COLON IDENTIFIER EQUALS . block
    (5) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 22

state 21

    (4) args -> IDENTIFIER COLON IDENTIFIER LBRACKET IDENTIFIER RBRACKET .

    RPAREN          reduce using rule 4 (args -> IDENTIFIER COLON IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)


state 22

    (3) method_declaration -> RESERVED IDENTIFIER LPAREN args RPAREN COLON IDENTIFIER EQUALS block .

    RBRACE          reduce using rule 3 (method_declaration -> RESERVED IDENTIFIER LPAREN args RPAREN COLON IDENTIFIER EQUALS block .)


state 23

    (5) block -> LBRACE . statements RBRACE
    (6) statements -> . statement
    (7) statements -> . statements statement
    (8) statement -> . RESERVED LPAREN STRING RPAREN

    RESERVED        shift and go to state 26

    statements                     shift and go to state 24
    statement                      shift and go to state 25

state 24

    (5) block -> LBRACE statements . RBRACE
    (7) statements -> statements . statement
    (8) statement -> . RESERVED LPAREN STRING RPAREN

    RBRACE          shift and go to state 27
    RESERVED        shift and go to state 26

    statement                      shift and go to state 28

state 25

    (6) statements -> statement .

    RBRACE          reduce using rule 6 (statements -> statement .)
    RESERVED        reduce using rule 6 (statements -> statement .)


state 26

    (8) statement -> RESERVED . LPAREN STRING RPAREN

    LPAREN          shift and go to state 29


state 27

    (5) block -> LBRACE statements RBRACE .

    RBRACE          reduce using rule 5 (block -> LBRACE statements RBRACE .)


state 28

    (7) statements -> statements statement .

    RBRACE          reduce using rule 7 (statements -> statements statement .)
    RESERVED        reduce using rule 7 (statements -> statements statement .)


state 29

    (8) statement -> RESERVED LPAREN . STRING RPAREN

    STRING          shift and go to state 30


state 30

    (8) statement -> RESERVED LPAREN STRING . RPAREN

    RPAREN          shift and go to state 31


state 31

    (8) statement -> RESERVED LPAREN STRING RPAREN .

    RBRACE          reduce using rule 8 (statement -> RESERVED LPAREN STRING RPAREN .)
    RESERVED        reduce using rule 8 (statement -> RESERVED LPAREN STRING RPAREN .)

